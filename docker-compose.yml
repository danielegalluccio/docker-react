version: "3"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    volumes:
      - /app/node_modules
      - .:/app
  tests:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - .:/app
    command: ["yarn", "test"]

  #   # command:
  #   #   serve all --dangerous-force-http
  #   ports:
  #     - "80:80" # Public port
  #   # depends_on:
  #   #   - hydra-migrate
  #   #   - jaeger
  #   volumes:
  #     - ./web1:/usr/local/apache2/htdocs/
  #   environment:
  #     - URLS_SELF_ISSUER=http://127.0.0.1:4444
  #     - URLS_CONSENT=http://localhost:4567/consent
  # web2:
  #   build:
  #     context: ./builds
  #     dockerfile: Dockerfile.dev
  #   # command:
  #   #   serve all --dangerous-force-http
  #   ports:
  #     - "81:80" # Public port
  #   # depends_on:
  #   #   - hydra-migrate
  #   #   - jaeger
  #   # volumes:
  #   #   - ./web2:/usr/local/apache2/htdocs/
  #   environment:
  #     - URLS_SELF_ISSUER=http://127.0.0.1:4444
  #     - URLS_CONSENT=http://localhost:4567/consent
  # reverse-proxy:
  #   # The official v2.0 Traefik docker image
  #   image: traefik:v2.0
  #   # Enables the web UI and tells Traefik to listen to docker
  #   command: --api.insecure=true --providers.docker
  #   ports:
  #     # The HTTP port
  #     - "80:80"
  #     # The Web UI (enabled by --api.insecure=true)
  #     - "8080:8080"
  #   volumes:
  #     # So that Traefik can listen to the Docker events
  #     - /var/run/docker.sock:/var/run/docker.sock
  # whoami:
  #   # A container that exposes an API to show its IP address
  #   image: containous/whoami
  #   labels:
  #     - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"
